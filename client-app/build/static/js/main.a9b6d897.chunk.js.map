{"version":3,"sources":["assets/logo.png","App.styles.js","redux/audio/audio.types.js","api/audio.api.js","redux/audio/audio.actions.js","App.js","redux/audio/audio.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["AppContainer","styled","div","ImageContainer","img","AUDIO_ACTIONS","Audio","audio","useSelector","state","audioReducer","dispatch","useDispatch","type","onChange","e","payload","setAudio","target","files","onClick","formData","FormData","append","name","axios","url","websitePrefix","method","data","headers","mode","AudioTranscribe","then","word","console","log","App","src","logo","alt","INITIAL_STATE","action","combineReducers","middleWares","logger","thunk","store","createStore","reducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"qJAAe,G,MAAA,IAA0B,kC,gBCE5BA,EAAeC,IAAOC,IAAV,oEAKZC,EAAiBF,IAAOG,IAAV,iE,yBCPZC,EACH,eADGA,EAEE,c,yBC0CFC,EA3BD,WAAO,IACVC,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,gBAApCH,MACDI,EAAWC,cAejB,OACI,gCACI,cAAC,IAAD,CAAOC,KAAK,OAAOC,SAfN,SAAAC,GACjBJ,ECfgB,SAACI,GAAD,MAAQ,CAC9BF,KAAMR,EACNW,QAASD,GDaME,CAASF,EAAEG,OAAOC,MAAM,QAe7B,cAAC,IAAD,CAAQN,KAAK,UAAUO,QAZV,WACjB,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OACLhB,EAAMiB,KACNjB,GAtBmB,SAACA,GAC5B,OAAOkB,IAAM,CACTC,IAAKC,kCACLC,OAAQ,OACRC,KAAMtB,EACNuB,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,SAkBPC,CAAgBX,GAAUY,MAAK,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,OAM9C,yBEvBGG,EATI,WACjB,OACE,eAACrC,EAAD,WACE,cAACG,EAAD,CAAgBmC,IAAKC,EAAMC,IAAI,SAC/B,cAAC,EAAD,Q,iCCNAC,EAAgB,CACpBlC,MAAO,MAoBMG,EAjBM,WAAoC,IAAnCD,EAAkC,uDAA1BgC,EAAeC,EAAW,uCACtD,OAAQA,EAAO7B,MACb,KAAKR,EAKL,KAAKA,EACH,OAAO,2BACFI,GADL,IAEEF,MAAOmC,EAAO1B,UAElB,QACE,OAAOP,IChBEkC,cAAgB,CAC3BjC,iB,QCAEkC,EAAc,CAACC,IAAQC,KAGdC,EAFDC,YAAYC,EAASC,IAAe,WAAf,EAAmBN,ICGtDO,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,U","file":"static/js/main.a9b6d897.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c2ac8c82.png\";","import styled from 'styled-components';\n\nexport const AppContainer = styled.div`\n  text-align: center;\n  color: white;\n`;\n\nexport const ImageContainer = styled.img`\n  height: 30vmin;\n  padding: 15px;\n`\n","  export const AUDIO_ACTIONS = {\n    UPLOAD: \"UPLOAD_AUDIO\",\n    CLEAR_AUDIO: \"CLEAR_AUDIO\",\n  };","import React from 'react';\nimport axios from 'axios';\nimport {websitePrefix} from '../constants/api.constants';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {setAudio} from \"../redux/audio/audio.actions\";\nimport { Button, Input } from 'antd';\n\nexport const AudioTranscribe = (audio) => {\n    return axios({\n        url: websitePrefix + \"api/audio\",\n        method: \"POST\",\n        data: audio,\n        headers: { \"Content-Type\": \"application/json\" },\n        mode: \"cors\"\n    })\n}\n\nconst Audio = () => {\n    const {audio} = useSelector(state => state.audioReducer);\n    const dispatch = useDispatch();\n\n    const onFileChange = e => {\n        dispatch(setAudio(e.target.files[0]));\n    }\n\n    const onFileUpload = () => {\n        const formData = new FormData();\n        formData.append(\n            audio.name,\n            audio\n        )\n       AudioTranscribe(formData).then(word => console.log(word));\n    }\n    \n    return(\n        <div>\n            <Input type=\"file\" onChange={onFileChange} />\n            <Button type=\"primary\" onClick={onFileUpload}>\n                Upload!\n            </Button>\n        </div>\n    )\n}\n\nexport default Audio;","import {AUDIO_ACTIONS } from \"./audio.types\";\n\nexport const clearAudio = () => ({\n  type: AUDIO_ACTIONS.CLEAR_AUDIO,\n  payload: null,\n});\n\nexport const setAudio = (e) => ({\n  type: AUDIO_ACTIONS.UPLOAD,\n  payload: e,\n});","import React from 'react';\nimport logo from './assets/logo.png';\nimport {AppContainer, ImageContainer} from './App.styles.js';\nimport Audio from './api/audio.api';\n\nexport const App = () => {\n  return (\n    <AppContainer>\n      <ImageContainer src={logo} alt=\"logo\" />\n      <Audio/>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","\nimport { AUDIO_ACTIONS } from \"./audio.types\";\n\nconst INITIAL_STATE = {\n  audio: null,\n};\n\nconst audioReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case AUDIO_ACTIONS.UPLOAD:\n      return {\n        ...state,\n        audio: action.payload,\n      };\n    case AUDIO_ACTIONS.CLEAR_AUDIO:\n      return {\n        ...state,\n        audio: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default audioReducer;","import { combineReducers } from \"redux\";\n\nimport audioReducer from \"./audio/audio.reducer\";\n\nexport default combineReducers({\n    audioReducer\n});","import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport reducer from \"./root-reducer\";\nimport thunk from \"redux-thunk\";\n\nconst middleWares = [logger, thunk];\nconst store = createStore(reducer, applyMiddleware(...middleWares));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}